{"ast":null,"code":"var _jsxFileName = \"/Users/parthpathak/Documents/todo/src/components/App/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment, useReducer } from \"react\";\nimport AddTask from \"../AddTask\";\nimport TaskList from \"../../components/TaskList\";\nimport Header from \"../Header\";\nimport MenuDrawer from \"../MenuDrawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  content: {\n    flexGrow: 1\n  },\n  toolbar: theme.mixins.toolbar\n}));\n\nconst taskReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      {\n        const task = {\n          id: action.id,\n          name: action.name,\n          projectId: action.projectId,\n          completed: false,\n          deleted: false\n        };\n        return [...state, task];\n      }\n\n    case \"DO_TODO\":\n      return state.map(task => task.id == action.id ? { ...task,\n        completed: true\n      } : task);\n\n    case \"UNDO_TODO\":\n      return state.map(task => task.id == action.id ? { ...task,\n        completed: false\n      } : task);\n\n    case \"DELETE_TODO\":\n      return state.map(task => task.id == action.id ? { ...task,\n        deleted: true\n      } : task);\n\n    default:\n      throw new Error();\n  }\n};\n\nconst filterReducer = (state, action) => {\n  switch (action.type) {\n    case \"SHOW_ALL\":\n      return \"ALL\";\n\n    case \"SHOW_INCOMPLETE\":\n      return \"INCOMPLETE\";\n\n    default:\n      throw new Error();\n  }\n};\n\nconst menuItemsReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_PROJECT\":\n      return [...state, {\n        id: action.id,\n        name: action.name,\n        menu: \"PROJECT\"\n      }];\n\n    case \"DELETE\":\n      return state.filter(item => item.id != action.id);\n\n    default:\n      throw new Error();\n  }\n}; // Manage the project selected\n\n\nconst menuItemSelectedReducer = (state, action) => {\n  switch (action.type) {\n    case \"PROJECT_SELECTED\":\n      return {\n        id: action.id,\n        name: action.name,\n        menu: action.menu\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const classes = useStyles();\n  const [tasks, dispatchTasks] = useReducer(taskReducer, []);\n  const [filter, dispatchFilter] = useReducer(filterReducer, \"INCOMPLETE\");\n  const [menuItems, dispatchMenuItems] = useReducer(menuItemsReducer, [{\n    id: new Date().getTime(),\n    name: \"Inbox\",\n    menu: \"PROJECT\"\n  }]);\n  const [menuItemSelected, dispatchMenuItemSelected] = useReducer(menuItemSelectedReducer, { ...menuItems[0]\n  });\n  const [drawerMobileOpen, setDrawerMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setDrawerMobileOpen(!drawerMobileOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: menuItemSelected.name,\n        handleToggle: handleDrawerToggle,\n        dispatch: dispatchFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuDrawer, {\n        dispatchMenuItemSelected: dispatchMenuItemSelected,\n        dispatchMenuItems: dispatchMenuItems,\n        menuItems: menuItems,\n        mobileOpen: drawerMobileOpen,\n        handleDrawerToggle: handleDrawerToggle,\n        menuItemSelected: menuItemSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.toolbar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(TaskList, {\n            tasks: tasks,\n            filter: filter,\n            menuItems: menuItems,\n            selected: menuItemSelected,\n            dispatch: dispatchTasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n            dispatch: dispatchTasks,\n            project: menuItemSelected.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"1anxA+mjRcQlxRqMmomIHezXmvM=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/parthpathak/Documents/todo/src/components/App/index.js"],"names":["React","useState","Fragment","useReducer","AddTask","TaskList","Header","MenuDrawer","CssBaseline","Container","makeStyles","useStyles","theme","root","display","content","flexGrow","toolbar","mixins","taskReducer","state","action","type","task","id","name","projectId","completed","deleted","map","Error","filterReducer","menuItemsReducer","menu","filter","item","menuItemSelectedReducer","App","classes","tasks","dispatchTasks","dispatchFilter","menuItems","dispatchMenuItems","Date","getTime","menuItemSelected","dispatchMenuItemSelected","drawerMobileOpen","setDrawerMobileOpen","handleDrawerToggle"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useReducer } from \"react\";\r\nimport AddTask from \"../AddTask\";\r\nimport TaskList from \"../../components/TaskList\";\r\nimport Header from \"../Header\";\r\nimport MenuDrawer from \"../MenuDrawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  content: {\r\n    flexGrow: 1\r\n  },\r\n  toolbar: theme.mixins.toolbar\r\n}));\r\n\r\nconst taskReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\": {\r\n      const task = {\r\n        id: action.id,\r\n        name: action.name,\r\n        projectId: action.projectId,\r\n        completed: false,\r\n        deleted: false\r\n      };\r\n      return [...state, task];\r\n    }\r\n    case \"DO_TODO\":\r\n      return state.map(task =>\r\n        task.id == action.id ? { ...task, completed: true } : task\r\n      );\r\n    case \"UNDO_TODO\":\r\n      return state.map(task =>\r\n        task.id == action.id ? { ...task, completed: false } : task\r\n      );\r\n    case \"DELETE_TODO\":\r\n      return state.map(task =>\r\n        task.id == action.id ? { ...task, deleted: true } : task\r\n      );\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst filterReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SHOW_ALL\":\r\n      return \"ALL\";\r\n    case \"SHOW_INCOMPLETE\":\r\n      return \"INCOMPLETE\";\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst menuItemsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_PROJECT\":\r\n      return [...state, { id: action.id, name: action.name, menu: \"PROJECT\" }];\r\n    case \"DELETE\":\r\n      return state.filter(item => item.id != action.id);\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\n// Manage the project selected\r\nconst menuItemSelectedReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"PROJECT_SELECTED\":\r\n      return { id: action.id, name: action.name, menu: action.menu };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  const [tasks, dispatchTasks] = useReducer(taskReducer, []);\r\n  const [filter, dispatchFilter] = useReducer(filterReducer, \"INCOMPLETE\");\r\n\r\n  const [menuItems, dispatchMenuItems] = useReducer(menuItemsReducer, [\r\n    { id: new Date().getTime(), name: \"Inbox\", menu: \"PROJECT\" }\r\n  ]);\r\n  const [\r\n    menuItemSelected,\r\n    dispatchMenuItemSelected\r\n  ] = useReducer(menuItemSelectedReducer, { ...menuItems[0] });\r\n\r\n  const [drawerMobileOpen, setDrawerMobileOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setDrawerMobileOpen(!drawerMobileOpen);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <CssBaseline />\r\n      <div className={classes.root}>\r\n        <Header\r\n          title={menuItemSelected.name}\r\n          handleToggle={handleDrawerToggle}\r\n          dispatch={dispatchFilter}\r\n        />\r\n        <MenuDrawer\r\n          dispatchMenuItemSelected={dispatchMenuItemSelected}\r\n          dispatchMenuItems={dispatchMenuItems}\r\n          menuItems={menuItems}\r\n          mobileOpen={drawerMobileOpen}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          menuItemSelected={menuItemSelected}\r\n        />\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Container maxWidth=\"sm\">\r\n            <TaskList\r\n              tasks={tasks}\r\n              filter={filter}\r\n              menuItems={menuItems}\r\n              selected={menuItemSelected}\r\n              dispatch={dispatchTasks}\r\n            />\r\n            {}\r\n          \r\n              <AddTask dispatch={dispatchTasks} project={menuItemSelected.id} />\r\n            \r\n            \r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}