{"ast":null,"code":"var _jsxFileName = \"/Users/parthpathak/Documents/todo/src/components/AddTask/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport uuid from \"uuid/v4\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTask = _ref => {\n  _s();\n\n  let {\n    dispatch,\n    project\n  } = _ref;\n  const [task, setTask] = useState(\"\");\n  const [todoEditing, setTodoEditing] = React.useState(null);\n  const [editingText, setEditingText] = React.useState(\"\");\n\n  const handleSubmit = event => {\n    if (task) {\n      dispatch({\n        type: \"ADD_TODO\",\n        id: uuid(),\n        name: task,\n        projectId: project,\n        labelId: 0,\n        completed: false,\n        delete: false\n      });\n    }\n\n    setTask(\"\");\n    event.preventDefault();\n  };\n\n  const handleChange = event => setTask(event.target.value);\n\n  const submitEdits = event => {\n    const updatedTodos = [...task].map(task => {\n      if (task.id == action.id) {\n        task.text = editingText;\n      }\n\n      return task;\n    });\n    setTask(updatedTodos);\n    setTodoEditing(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Task\",\n            value: task,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            type: \"submit\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: [task.id === todoEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setEditingText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-actions\",\n            children: task.id === todoEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => submitEdits(task.id),\n              children: \"Submit Edits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setTodoEditing(task.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTask, \"UkdGMYA+G3x06t37vAp/1rl3XBs=\");\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/Users/parthpathak/Documents/todo/src/components/AddTask/index.js"],"names":["React","useState","Input","Button","Grid","uuid","AddTask","dispatch","project","task","setTask","todoEditing","setTodoEditing","editingText","setEditingText","handleSubmit","event","type","id","name","projectId","labelId","completed","delete","preventDefault","handleChange","target","value","submitEdits","updatedTodos","map","action","text","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport uuid from \"uuid/v4\";\n\nconst AddTask = ({ dispatch, project }) => {\n  const [task, setTask] = useState(\"\");\n  const [todoEditing, setTodoEditing] = React.useState(null);\n  const [editingText, setEditingText] = React.useState(\"\");\n\n  const handleSubmit = event => {\n    if (task) {\n      dispatch({\n        type: \"ADD_TODO\",\n        id: uuid(),\n        name: task,\n        projectId: project,\n        labelId: 0,\n        completed: false,\n        delete: false\n      });\n    }\n\n    setTask(\"\");\n    event.preventDefault();\n  };\n\n  const handleChange = event => setTask(event.target.value);\n\n  const submitEdits = event => {\n    const updatedTodos = [...task].map((task) => {\n      if ( task.id == action.id) {\n        task.text = editingText;\n      }\n      return task;\n    });\n    setTask(updatedTodos);\n    setTodoEditing(null);\n  }\n\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Grid container direction=\"row\" alignItems=\"flex-end\">\n          <Grid item xs={8}>\n            <Input placeholder=\"Task\" value={task} onChange={handleChange} />\n          </Grid>\n          <Grid item xs={4}>\n            <Button variant=\"contained\" type=\"submit\">\n              Add Task\n            </Button>\n          </Grid>\n          <Grid>\n          {task.id === todoEditing ? (\n              <input\n                type=\"text\"\n                onChange={(e) => setEditingText(e.target.value)}\n              />\n            ) : (\n              <div>{task.text}</div>\n            )}\n  \n          <div className=\"todo-actions\">\n            {task.id === todoEditing ? (\n              <button onClick={() => submitEdits(task.id)}>Submit Edits</button>\n            ) : (\n              <button onClick={() => setTodoEditing(task.id)}>Edit</button>\n            )}\n          </div>\n      \n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n};\n\nexport default AddTask;\n"]},"metadata":{},"sourceType":"module"}