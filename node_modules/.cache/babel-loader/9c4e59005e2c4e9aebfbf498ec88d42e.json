{"ast":null,"code":"var _jsxFileName = \"/Users/parthpathak/Documents/todo/src/components/TaskList/TaskItem/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  listItem: {\n    paddingLeft: 0\n  }\n}));\n\nconst TaskItem = _ref => {\n  _s();\n\n  let {\n    dispatch,\n    task,\n    labels\n  } = _ref;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  useEffect(() => {\n    const disable = task.completed || task.deleted;\n    setDisabled(disable);\n  }, [task.completed, task.deleted]);\n\n  const handleClickCheckBox = () => {\n    dispatch({\n      type: task.completed ? \"UNDO_TODO\" : \"DO_TODO\",\n      id: task.id\n    });\n  };\n\n  const handleClickDelete = () => {\n    dispatch({\n      type: \"DELETE_TODO\",\n      id: task.id\n    });\n  };\n\n  const handleClickMore = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      dense: true,\n      className: classes.listItem,\n      disabled: disabled,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          edge: \"start\",\n          tabIndex: -1,\n          onClick: handleClickCheckBox,\n          checked: disabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"display more actions\",\n        edge: \"end\",\n        color: \"inherit\",\n        onClick: handleClickMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n        onClick: handleClickDelete,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"delete\",\n          children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskItem, \"G4Ct93GFP9TTl3fWECZnWAvoMsg=\", false, function () {\n  return [useStyles];\n});\n\n_c = TaskItem;\nexport default TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/Users/parthpathak/Documents/todo/src/components/TaskList/TaskItem/index.js"],"names":["React","Fragment","useState","useEffect","makeStyles","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","DeleteForeverIcon","IconButton","Divider","useStyles","listItem","paddingLeft","TaskItem","dispatch","task","labels","classes","anchorEl","setAnchorEl","disabled","setDisabled","disable","completed","deleted","handleClickCheckBox","type","id","handleClickDelete","handleClickMore","event","currentTarget","name"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\n\n\nconst useStyles = makeStyles(() => ({\n  listItem: {\n    paddingLeft: 0\n  }\n}));\n\n\n\nconst TaskItem = ({ dispatch, task, labels }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  \n\n \n\n  const [disabled, setDisabled] = useState(false);\n  useEffect(() => {\n    const disable = task.completed || task.deleted;\n    setDisabled(disable);\n  }, [task.completed, task.deleted]);\n\n  const handleClickCheckBox = () => {\n    dispatch({ type: task.completed ? \"UNDO_TODO\" : \"DO_TODO\", id: task.id });\n  };\n\n  const handleClickDelete = () => {\n    dispatch({ type: \"DELETE_TODO\", id: task.id });\n  };\n\n  const handleClickMore = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  \n\n  return (\n    <Fragment>\n      <ListItem dense className={classes.listItem} disabled={disabled}>\n        <ListItemIcon>\n          <Checkbox\n            edge=\"start\"\n            tabIndex={-1}\n            onClick={handleClickCheckBox}\n            checked={disabled}\n          />\n        </ListItemIcon>\n        <ListItemText primary={task.name} />\n        <IconButton\n          aria-label=\"display more actions\"\n          edge=\"end\"\n          color=\"inherit\"\n          onClick={handleClickMore}\n        >\n          \n        </IconButton>\n        \n          \n     \n        <ListItemSecondaryAction onClick={handleClickDelete}>\n          <IconButton edge=\"end\" aria-label=\"delete\">\n            <DeleteForeverIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n      <Divider />\n    </Fragment>\n  );\n};\n\nexport default TaskItem;\n"]},"metadata":{},"sourceType":"module"}