{"ast":null,"code":"var _jsxFileName = \"/Users/parthpathak/Documents/todo/src/components/AddProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddProject = () => {\n  _s();\n\n  const [list, setList] = React.useState([]);\n  const [project, setProject] = React.useState(\"\");\n  const [projectEditing, setProjectEditing] = useState(null);\n  const [editingText, setEditingText] = useState(\"\");\n  useEffect(() => {\n    const json = localStorage.getItem(\"list\");\n    const loadedlist = JSON.parse(json);\n\n    if (loadedlist) {\n      setList(loadedlist);\n    }\n  }, []);\n  useEffect(() => {\n    const json = JSON.stringify(list);\n    localStorage.setItem(\"list\", json);\n  }, [list]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newproject = {\n      id: new Date().getTime(),\n      text: project,\n      completed: false\n    };\n    setList([...list].concat(newproject));\n    setProject(\"\");\n  }\n\n  function deleteproject(id) {\n    let updatedlist = [...list].filter(project => project.id !== id);\n    setList(updatedlist);\n  }\n\n  function toggleComplete(id) {\n    let updatedlist = [...list].map(project => {\n      if (project.id === id) {\n        project.completed = !project.completed;\n      }\n\n      return project;\n    });\n    setList(updatedlist);\n  }\n\n  function submitEdits(id) {\n    const updatedlist = [...list].map(project => {\n      if (project.id === id) {\n        project.text = editingText;\n      }\n\n      return project;\n    });\n    setList(updatedlist);\n    setProjectEditing(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"project-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"project List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text1\",\n        onChange: e => setProject(e.target.value),\n        value: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit1\",\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), list.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox1\",\n          id: \"complete\",\n          checked: project.completed,\n          onChange: () => toggleComplete(project.id),\n          style: {\n            textDecoration: project.id ? \"line-through\" : \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), project.id === projectEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text1\",\n          onChange: e => setEditingText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: project.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-actions\",\n        children: [project.id === projectEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => submitEdits(project.id),\n          children: \"Submit Edits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setProjectEditing(project.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteproject(project.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, project.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AddProject, \"mRhzKoQbsMFWGuAOsFbssztaZWQ=\");\n\n_c = AddProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"sources":["/Users/parthpathak/Documents/todo/src/components/AddProject.js"],"names":["React","useState","useEffect","AddProject","list","setList","project","setProject","projectEditing","setProjectEditing","editingText","setEditingText","json","localStorage","getItem","loadedlist","JSON","parse","stringify","setItem","handleSubmit","e","preventDefault","newproject","id","Date","getTime","text","completed","concat","deleteproject","updatedlist","filter","toggleComplete","map","submitEdits","target","value","textDecoration"],"mappings":"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","sourcesContent":["import React ,{useState ,useEffect} from \"react\";\n\nexport const AddProject = () => {\n    const [list, setList] = React.useState([]);\n    const [project, setProject] = React.useState(\"\");\n    const [projectEditing, setProjectEditing] = useState(null);\n    const [editingText, setEditingText] = useState(\"\");\n  \n    useEffect(() => {\n      const json = localStorage.getItem(\"list\");\n      const loadedlist = JSON.parse(json);\n      if (loadedlist) {\n        setList(loadedlist);\n      }\n    }, []);\n  \n    useEffect(() => {\n      const json = JSON.stringify(list);\n      localStorage.setItem(\"list\", json);\n    }, [list]);\n  \n    function handleSubmit(e) {\n      e.preventDefault();\n  \n      const newproject = {\n        id: new Date().getTime(),\n        text: project,\n        completed: false,\n      };\n      setList([...list].concat(newproject));\n      setProject(\"\");\n    }\n  \n    function deleteproject(id) {\n      let updatedlist = [...list].filter((project) => project.id !== id);\n      setList(updatedlist);\n    }\n  \n    function toggleComplete(id) {\n      let updatedlist = [...list].map((project) => {\n        if (project.id === id) {\n          project.completed = !project.completed;\n        }\n        return project;\n      });\n      setList(updatedlist);\n    }\n  \n    function submitEdits(id) {\n      const updatedlist = [...list].map((project) => {\n        if (project.id === id) {\n          project.text = editingText;\n        }\n        return project;\n      });\n      setList(updatedlist);\n      setProjectEditing(null);\n    }\n  \n    return (\n      <div id=\"project-list\">\n        <h1>project List</h1>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text1\"\n            onChange={(e) => setProject(e.target.value)}\n            value={project}\n          />\n          <button type=\"submit1\">Add Project</button>\n        </form>\n        {list.map((project) => (\n          <div key={project.id} className=\"project\">\n            <div className=\"project-text\">\n              <input\n                type=\"checkbox1\"\n                id=\"complete\"\n                checked={project.completed}\n                onChange={() => toggleComplete(project.id)}\n                style={{textDecoration : project.id ? \"line-through\": \"\"}}\n              />\n              {project.id === projectEditing ? (\n                <input\n                  type=\"text1\"\n                  onChange={(e) => setEditingText(e.target.value)}\n                />\n              ) : (\n                <div>{project.text}</div>\n              )}\n            </div>\n            <div className=\"project-actions\">\n              {project.id === projectEditing ? (\n                <button onClick={() => submitEdits(project.id)}>Submit Edits</button>\n              ) : (\n                <button onClick={() => setProjectEditing(project.id)}>Edit</button>\n              )}\n  \n              <button onClick={() => deleteproject(project.id)}>Delete</button>\n            </div>\n          </div>\n          ))}\n      </div>\n    );\n  };\n  \n  \n  \n"]},"metadata":{},"sourceType":"module"}