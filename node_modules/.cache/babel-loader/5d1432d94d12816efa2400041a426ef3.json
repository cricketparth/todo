{"ast":null,"code":"var _jsxFileName = \"/Users/parthpathak/Documents/todo/src/components/AddProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Task } from \"./Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddProject = () => {\n  _s();\n\n  const [prolist, setproList] = React.useState([]);\n  const [project, setProject] = React.useState(\"\");\n  const [projectEditing, setProjectEditing] = useState(null);\n  const [editingText, setEditingText] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newproject = {\n      id: new Date().getTime(),\n      text: project,\n      completed: false\n    };\n    setproList([...prolist].concat(newproject));\n    setProject(\"\");\n  }\n\n  function deleteproject(id) {\n    let updatedprolist = [...prolist].filter(project => project.id !== id);\n    setproList(updatedprolist);\n  }\n\n  function toggleComplete(id) {\n    let updatedprolist = [...prolist].map(project => {\n      if (project.id === id) {\n        project.completed = !project.completed;\n      }\n\n      return project;\n    });\n    setproList(updatedprolist);\n  }\n\n  function submitEdits(id) {\n    const updatedprolist = [...prolist].map(project => {\n      if (project.id === id) {\n        project.text = editingText;\n      }\n\n      return project;\n    });\n    setproList(updatedprolist);\n    setProjectEditing(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"project-prolist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"project prolist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text1\",\n        onChange: e => setProject(e.target.value),\n        value: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit1\",\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), prolist.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-text\",\n        type: \"checkbox\",\n        id: \"completed\",\n        checked: project.completed,\n        onChange: () => toggleComplete(project.id) //style={{textDecoration : project.id ? \"line-through\": \"\"}}\n        ,\n        children: project.id === projectEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text1\",\n          onChange: e => setEditingText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: project.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-actions\",\n        children: [project.id === projectEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => submitEdits(project.id),\n          children: \"Submit Edits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setProjectEditing(project.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteproject(project.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, project.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AddProject, \"r7E8zTfVvChB6Iun9jpVO/XYkHc=\");\n\n_c = AddProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"sources":["/Users/parthpathak/Documents/todo/src/components/AddProject.js"],"names":["React","useState","useEffect","Task","AddProject","prolist","setproList","project","setProject","projectEditing","setProjectEditing","editingText","setEditingText","handleSubmit","e","preventDefault","newproject","id","Date","getTime","text","completed","concat","deleteproject","updatedprolist","filter","toggleComplete","map","submitEdits","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;;AAGA,WAASY,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EADa;AAEjBC,MAAAA,IAAI,EAAEb,OAFW;AAGjBc,MAAAA,SAAS,EAAE;AAHM,KAAnB;AAKAf,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaiB,MAAb,CAAoBN,UAApB,CAAD,CAAV;AACAR,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AAED,WAASe,aAAT,CAAuBN,EAAvB,EAA2B;AACzB,QAAIO,cAAc,GAAG,CAAC,GAAGnB,OAAJ,EAAaoB,MAAb,CAAqBlB,OAAD,IAAaA,OAAO,CAACU,EAAR,KAAeA,EAAhD,CAArB;AACAX,IAAAA,UAAU,CAACkB,cAAD,CAAV;AACD;;AAED,WAASE,cAAT,CAAwBT,EAAxB,EAA4B;AAC1B,QAAIO,cAAc,GAAG,CAAC,GAAGnB,OAAJ,EAAasB,GAAb,CAAkBpB,OAAD,IAAa;AACjD,UAAIA,OAAO,CAACU,EAAR,KAAeA,EAAnB,EAAuB;AACrBV,QAAAA,OAAO,CAACc,SAAR,GAAoB,CAACd,OAAO,CAACc,SAA7B;AACD;;AACD,aAAOd,OAAP;AACD,KALoB,CAArB;AAMAD,IAAAA,UAAU,CAACkB,cAAD,CAAV;AACD;;AAED,WAASI,WAAT,CAAqBX,EAArB,EAAyB;AACvB,UAAMO,cAAc,GAAG,CAAC,GAAGnB,OAAJ,EAAasB,GAAb,CAAkBpB,OAAD,IAAa;AACnD,UAAIA,OAAO,CAACU,EAAR,KAAeA,EAAnB,EAAuB;AACrBV,QAAAA,OAAO,CAACa,IAAR,GAAeT,WAAf;AACD;;AACD,aAAOJ,OAAP;AACD,KALsB,CAAvB;AAMAD,IAAAA,UAAU,CAACkB,cAAD,CAAV;AACAd,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEG,YAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,QAAQ,EAAGC,CAAD,IAAON,UAAU,CAACM,CAAC,CAACe,MAAF,CAASC,KAAV,CAF7B;AAGE,QAAA,KAAK,EAAEvB;AAHT;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAUGF,OAAO,CAACsB,GAAR,CAAapB,OAAD,iBACX;AAAsB,MAAA,SAAS,EAAC,SAAhC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,WAFP;AAGI,QAAA,OAAO,EAAEA,OAAO,CAACc,SAHrB;AAII,QAAA,QAAQ,EAAE,MAAMK,cAAc,CAACnB,OAAO,CAACU,EAAT,CAJlC,CAKI;AALJ;AAAA,kBAOGV,OAAO,CAACU,EAAR,KAAeR,cAAf,gBACC;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,QAAQ,EAAGK,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACe,MAAF,CAASC,KAAV;AAFjC;AAAA;AAAA;AAAA;AAAA,gBADD,gBAMC;AAAA,oBAAMvB,OAAO,CAACa;AAAd;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,mBACGb,OAAO,CAACU,EAAR,KAAeR,cAAf,gBACC;AAAQ,UAAA,OAAO,EAAE,MAAMmB,WAAW,CAACrB,OAAO,CAACU,EAAT,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAQ,UAAA,OAAO,EAAE,MAAMP,iBAAiB,CAACH,OAAO,CAACU,EAAT,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOE;AAAQ,UAAA,OAAO,EAAE,MAAMM,aAAa,CAAChB,OAAO,CAACU,EAAT,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA,OAAUV,OAAO,CAACU,EAAlB;AAAA;AAAA;AAAA;AAAA,YADD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CAvFI;;GAAMb,U;;KAAAA,U","sourcesContent":["import React ,{useState ,useEffect} from \"react\";\nimport { Task } from \"./Task\";\n\nexport const AddProject = () => {\n    const [prolist, setproList] = React.useState([]);\n    const [project, setProject] = React.useState(\"\");\n    const [projectEditing, setProjectEditing] = useState(null);\n    const [editingText, setEditingText] = useState(\"\");\n  \n   \n    function handleSubmit(e) {\n      e.preventDefault();\n  \n      const newproject = {\n        id: new Date().getTime(),\n        text: project,\n        completed: false,\n      };\n      setproList([...prolist].concat(newproject));\n      setProject(\"\");\n    }\n  \n    function deleteproject(id) {\n      let updatedprolist = [...prolist].filter((project) => project.id !== id);\n      setproList(updatedprolist);\n    }\n  \n    function toggleComplete(id) {\n      let updatedprolist = [...prolist].map((project) => {\n        if (project.id === id) {\n          project.completed = !project.completed;\n        }\n        return project;\n      });\n      setproList(updatedprolist);\n    }\n  \n    function submitEdits(id) {\n      const updatedprolist = [...prolist].map((project) => {\n        if (project.id === id) {\n          project.text = editingText;\n        }\n        return project;\n      });\n      setproList(updatedprolist);\n      setProjectEditing(null);\n    }\n  \n    return (\n      <div id=\"project-prolist\">\n        <h1>project prolist</h1>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text1\"\n            onChange={(e) => setProject(e.target.value)}\n            value={project}\n          />\n          <button type=\"submit1\">Add Project</button>\n        </form>\n        {prolist.map((project) => (\n          <div key={project.id} className=\"project\">\n            <div className=\"project-text\"\n                type=\"checkbox\"\n                id=\"completed\"\n                checked={project.completed}\n                onChange={() => toggleComplete(project.id)}\n                //style={{textDecoration : project.id ? \"line-through\": \"\"}}\n              >\n              {project.id === projectEditing ? (\n                <input\n                  type=\"text1\"\n                  onChange={(e) => setEditingText(e.target.value)}\n                />\n              ) : (\n                <div>{project.text}</div>\n              )}\n            </div>\n            <div className=\"project-actions\">\n              {project.id === projectEditing ? (\n                <button onClick={() => submitEdits(project.id)}>Submit Edits</button>\n              ) : (\n                <button onClick={() => setProjectEditing(project.id)}>Edit</button>\n              )}\n  \n              <button onClick={() => deleteproject(project.id)}>Delete</button>\n            </div>\n          </div>\n          ))}\n      </div>\n    );\n  };\n  \n  \n  \n"]},"metadata":{},"sourceType":"module"}