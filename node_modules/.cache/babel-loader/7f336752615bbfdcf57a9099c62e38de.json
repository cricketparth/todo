{"ast":null,"code":"var _jsxFileName = \"/Users/parthpathak/Documents/todo/src/components/Header/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 300;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  title: {\n    flexGrow: 1\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    }\n  }\n}));\nconst menuOptions = [{\n  action: \"complete\",\n  primaryOption: \"Show completed tasks\",\n  secondaryOption: \"Hide completed tasks\"\n}];\n\nconst Header = _ref => {\n  _s();\n\n  let {\n    title,\n    handleToggle,\n    dispatch\n  } = _ref;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedIndex, setSelectedIndex] = useState(0); // Boolean to check if the user as clicked an action in the menu\n\n  const [menuItemSelected, setMenuItemSelected] = useState(false);\n  const [showComplete, setShowComplete] = useState(false);\n  useEffect(() => {\n    if (showComplete) {\n      dispatch({\n        type: \"SHOW_ALL\"\n      });\n    } else {\n      dispatch({\n        type: \"SHOW_INCOMPLETE\"\n      });\n    }\n  }, [showComplete, dispatch]);\n\n  const handleClickMore = event => {\n    setAnchorEl(event.currentTarget);\n    setMenuItemSelected(false);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n\n    if (menuOptions[index].action === \"complete\") {\n      setShowComplete(!showComplete);\n    }\n\n    setMenuItemSelected(true);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleTextSwaping = () => {\n    if (menuItemSelected) {\n      const optionClicked = menuOptions[selectedIndex]; // Check if we need to change the text of the menu action\n\n      if (optionClicked.hasOwnProperty(\"secondaryOption\")) {\n        [optionClicked.primaryOption, optionClicked.secondaryOption] = [optionClicked.secondaryOption, optionClicked.primaryOption];\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        edge: \"start\",\n        className: classes.menuButton,\n        color: \"inherit\",\n        \"aria-label\": \"menu\",\n        onClick: handleToggle,\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.title,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"display more actions\",\n        edge: \"end\",\n        color: \"inherit\",\n        onClick: handleClickMore,\n        children: /*#__PURE__*/_jsxDEV(MoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        id: \"lock-menu\",\n        anchorEl: anchorEl,\n        keepMounted: true,\n        open: Boolean(anchorEl),\n        onClose: handleClose,\n        TransitionProps: handleTextSwaping,\n        children: menuOptions.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: event => handleMenuItemClick(event, index),\n          children: option.primaryOption\n        }, option.primaryOption, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"zbTXcfiS5NXSUOY3yYu1S7cDSiQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/parthpathak/Documents/todo/src/components/Header/index.js"],"names":["React","useState","useEffect","makeStyles","AppBar","Toolbar","Typography","IconButton","MenuIcon","MoreIcon","Menu","MenuItem","drawerWidth","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","breakpoints","up","display","title","appBar","width","marginLeft","menuOptions","action","primaryOption","secondaryOption","Header","handleToggle","dispatch","classes","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","menuItemSelected","setMenuItemSelected","showComplete","setShowComplete","type","handleClickMore","event","currentTarget","handleMenuItemClick","index","handleClose","handleTextSwaping","optionClicked","hasOwnProperty","Boolean","map","option"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  title: {\n    flexGrow: 1\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    }\n  }\n}));\n\nconst menuOptions = [\n  {\n    action: \"complete\",\n    primaryOption: \"Show completed tasks\",\n    secondaryOption: \"Hide completed tasks\"\n  }\n];\n\nconst Header = ({ title, handleToggle, dispatch }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  // Boolean to check if the user as clicked an action in the menu\n  const [menuItemSelected, setMenuItemSelected] = useState(false);\n\n  const [showComplete, setShowComplete] = useState(false);\n  useEffect(() => {\n    if (showComplete) {\n      dispatch({ type: \"SHOW_ALL\" });\n    } else {\n      dispatch({ type: \"SHOW_INCOMPLETE\" });\n    }\n  }, [showComplete, dispatch]);\n\n  const handleClickMore = event => {\n    setAnchorEl(event.currentTarget);\n    setMenuItemSelected(false);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n\n    if (menuOptions[index].action === \"complete\") {\n      setShowComplete(!showComplete);\n    }\n    setMenuItemSelected(true);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleTextSwaping = () => {\n    if (menuItemSelected) {\n      const optionClicked = menuOptions[selectedIndex];\n      // Check if we need to change the text of the menu action\n      if (optionClicked.hasOwnProperty(\"secondaryOption\")) {\n        [optionClicked.primaryOption, optionClicked.secondaryOption] = [\n          optionClicked.secondaryOption,\n          optionClicked.primaryOption\n        ];\n      }\n    }\n  };\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"menu\"\n          onClick={handleToggle}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          {title}\n        </Typography>\n        <IconButton\n          aria-label=\"display more actions\"\n          edge=\"end\"\n          color=\"inherit\"\n          onClick={handleClickMore}\n        >\n          <MoreIcon />\n        </IconButton>\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n          TransitionProps={handleTextSwaping}\n        >\n          {menuOptions.map((option, index) => (\n            <MenuItem\n              key={option.primaryOption}\n              onClick={event => handleMenuItemClick(event, index)}\n            >\n              {option.primaryOption}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}