{"ast":null,"code":"var _jsxFileName = \"/Users/parthpathak/Documents/todo/src/components/App/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment, useReducer } from \"react\";\nimport MenuDrawer from \"../MenuDrawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport uuid from \"uuid/v4\";\nimport AddTask from \"../AddTask\";\nimport TaskList from \"../../components/TaskList\";\nimport Header from \"../Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme();\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  content: {\n    flexGrow: 1\n  },\n  toolbar: theme.mixins.toolbar\n}));\n\nconst taskReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      {\n        const task = {\n          id: action.id,\n          name: action.name,\n          projectId: action.projectId,\n          labelId: action.labelId,\n          completed: false,\n          deleted: false\n        };\n        return [...state, task];\n      }\n\n    case \"DO_TODO\":\n      return state.map(task => task.id === action.id ? { ...task,\n        completed: true\n      } : task);\n\n    case \"UNDO_TODO\":\n      return state.map(task => task.id === action.id ? { ...task,\n        completed: false\n      } : task);\n\n    case \"DELETE_TODO\":\n      return state.map(task => task.id === action.id ? { ...task,\n        deleted: true\n      } : task);\n\n    case \"ADD_LABEL\":\n      return state.map(task => task.id === action.id ? { ...task,\n        labelId: action.labelId\n      } : task);\n\n    case \"UPDATE_TODO\":\n      return state.map(task => {\n        if (task.id === action.payload.id) {\n          task.name = action.payload.updatedLabel;\n        }\n\n        return task;\n      });\n\n    default:\n      throw new Error();\n  }\n};\n\nconst filterReducer = (state, action) => {\n  switch (action.type) {\n    case \"SHOW_ALL\":\n      return \"ALL\";\n\n    case \"SHOW_INCOMPLETE\":\n      return \"INCOMPLETE\";\n\n    default:\n      throw new Error();\n  }\n}; // Reducers creating items in the menu drawer\n\n\nconst menuItemsReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_LABEL\":\n      return [...state, {\n        id: action.id,\n        name: action.name,\n        menu: \"LABEL\"\n      }];\n\n    case \"ADD_PROJECT\":\n      return [...state, {\n        id: action.id,\n        name: action.name,\n        menu: \"PROJECT\"\n      }];\n\n    case \"DELETE\":\n      return state.filter(item => item.id !== action.id);\n\n    default:\n      throw new Error();\n  }\n}; // Manage the project or label selected\n\n\nconst menuItemSelectedReducer = (state, action) => {\n  switch (action.type) {\n    case \"LABEL_SELECTED\":\n      return {\n        id: action.id,\n        name: action.name,\n        menu: action.menu\n      };\n\n    case \"PROJECT_SELECTED\":\n      return {\n        id: action.id,\n        name: action.name,\n        menu: action.menu\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const classes = useStyles();\n  const [tasks, dispatchTasks] = useReducer(taskReducer, []);\n  console.log(tasks);\n  const [filter, dispatchFilter] = useReducer(filterReducer, \"INCOMPLETE\");\n  const [menuItems, dispatchMenuItems] = useReducer(menuItemsReducer, [{\n    id: uuid(),\n    name: \"Inbox\",\n    menu: \"PROJECT\"\n  }]);\n  const [menuItemSelected, dispatchMenuItemSelected] = useReducer(menuItemSelectedReducer, { ...menuItems[0]\n  });\n  const [drawerMobileOpen, setDrawerMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setDrawerMobileOpen(!drawerMobileOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: menuItemSelected.name,\n          handleToggle: handleDrawerToggle,\n          dispatch: dispatchFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MenuDrawer, {\n          dispatchMenuItemSelected: dispatchMenuItemSelected,\n          dispatchMenuItems: dispatchMenuItems,\n          menuItems: menuItems,\n          mobileOpen: drawerMobileOpen,\n          handleDrawerToggle: handleDrawerToggle,\n          menuItemSelected: menuItemSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.toolbar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(TaskList, {\n              tasks: tasks,\n              filter: filter,\n              menuItems: menuItems,\n              selected: menuItemSelected,\n              dispatch: dispatchTasks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this), menuItemSelected.menu !== \"LABEL\" ? /*#__PURE__*/_jsxDEV(AddTask, {\n              dispatch: dispatchTasks,\n              project: menuItemSelected.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"N23aIzNHfJTLXiwfYfuEsuLn2YY=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/parthpathak/Documents/todo/src/components/App/index.js"],"names":["React","useState","Fragment","useReducer","MenuDrawer","CssBaseline","Container","makeStyles","uuid","AddTask","TaskList","Header","theme","createMuiTheme","useStyles","root","display","content","flexGrow","toolbar","mixins","taskReducer","state","action","type","task","id","name","projectId","labelId","completed","deleted","map","payload","updatedLabel","Error","filterReducer","menuItemsReducer","menu","filter","item","menuItemSelectedReducer","App","classes","tasks","dispatchTasks","console","log","dispatchFilter","menuItems","dispatchMenuItems","menuItemSelected","dispatchMenuItemSelected","drawerMobileOpen","setDrawerMobileOpen","handleDrawerToggle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,QAAsD,OAAtD;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,KAAK,GAAGC,cAAc,EAA5B;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACK,KAAK,KAAK;AACrCG,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GAD+B;AAIrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH,GAJ4B;AAOrCC,EAAAA,OAAO,EAAEP,KAAK,CAACQ,MAAN,CAAaD;AAPe,CAAL,CAAN,CAA5B;;AAWA,MAAME,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAiB;AACf,cAAMC,IAAI,GAAG;AACXC,UAAAA,EAAE,EAAEH,MAAM,CAACG,EADA;AAEXC,UAAAA,IAAI,EAAEJ,MAAM,CAACI,IAFF;AAGXC,UAAAA,SAAS,EAAEL,MAAM,CAACK,SAHP;AAIXC,UAAAA,OAAO,EAAEN,MAAM,CAACM,OAJL;AAKXC,UAAAA,SAAS,EAAE,KALA;AAMXC,UAAAA,OAAO,EAAE;AANE,SAAb;AAQA,eAAO,CAAC,GAAGT,KAAJ,EAAWG,IAAX,CAAP;AACD;;AACD,SAAK,SAAL;AACE,aAAOH,KAAK,CAACU,GAAN,CAAUP,IAAI,IACnBA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACG,EAAnB,GAAwB,EAAE,GAAGD,IAAL;AAAWK,QAAAA,SAAS,EAAE;AAAtB,OAAxB,GAAuDL,IADlD,CAAP;;AAGF,SAAK,WAAL;AACE,aAAOH,KAAK,CAACU,GAAN,CAAUP,IAAI,IACnBA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACG,EAAnB,GAAwB,EAAE,GAAGD,IAAL;AAAWK,QAAAA,SAAS,EAAE;AAAtB,OAAxB,GAAwDL,IADnD,CAAP;;AAGF,SAAK,aAAL;AACE,aAAOH,KAAK,CAACU,GAAN,CAAUP,IAAI,IACnBA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACG,EAAnB,GAAwB,EAAE,GAAGD,IAAL;AAAWM,QAAAA,OAAO,EAAE;AAApB,OAAxB,GAAqDN,IADhD,CAAP;;AAGF,SAAK,WAAL;AACE,aAAOH,KAAK,CAACU,GAAN,CAAUP,IAAI,IACnBA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACG,EAAnB,GAAwB,EAAE,GAAGD,IAAL;AAAWI,QAAAA,OAAO,EAAEN,MAAM,CAACM;AAA3B,OAAxB,GAA+DJ,IAD1D,CAAP;;AAGF,SAAK,aAAL;AACE,aAAOH,KAAK,CAACU,GAAN,CAAWP,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACU,OAAP,CAAeP,EAA/B,EAAmC;AACjCD,UAAAA,IAAI,CAACE,IAAL,GAAYJ,MAAM,CAACU,OAAP,CAAeC,YAA3B;AACD;;AACD,eAAOT,IAAP;AACD,OALM,CAAP;;AAQF;AACE,YAAM,IAAIU,KAAJ,EAAN;AAtCJ;AAwCD,CAzCD;;AA2CA,MAAMC,aAAa,GAAG,CAACd,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,KAAP;;AACF,SAAK,iBAAL;AACE,aAAO,YAAP;;AACF;AACE,YAAM,IAAIW,KAAJ,EAAN;AANJ;AAQD,CATD,C,CAWA;;;AACA,MAAME,gBAAgB,GAAG,CAACf,KAAD,EAAQC,MAAR,KAAmB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAW;AAAEI,QAAAA,EAAE,EAAEH,MAAM,CAACG,EAAb;AAAiBC,QAAAA,IAAI,EAAEJ,MAAM,CAACI,IAA9B;AAAoCW,QAAAA,IAAI,EAAE;AAA1C,OAAX,CAAP;;AACF,SAAK,aAAL;AACE,aAAO,CAAC,GAAGhB,KAAJ,EAAW;AAAEI,QAAAA,EAAE,EAAEH,MAAM,CAACG,EAAb;AAAiBC,QAAAA,IAAI,EAAEJ,MAAM,CAACI,IAA9B;AAAoCW,QAAAA,IAAI,EAAE;AAA1C,OAAX,CAAP;;AACF,SAAK,QAAL;AACE,aAAOhB,KAAK,CAACiB,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACd,EAAL,KAAYH,MAAM,CAACG,EAAxC,CAAP;;AACF;AACE,YAAM,IAAIS,KAAJ,EAAN;AARJ;AAUD,CAXD,C,CAaA;;;AACA,MAAMM,uBAAuB,GAAG,CAACnB,KAAD,EAAQC,MAAR,KAAmB;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO;AAAEE,QAAAA,EAAE,EAAEH,MAAM,CAACG,EAAb;AAAiBC,QAAAA,IAAI,EAAEJ,MAAM,CAACI,IAA9B;AAAoCW,QAAAA,IAAI,EAAEf,MAAM,CAACe;AAAjD,OAAP;;AACF,SAAK,kBAAL;AACE,aAAO;AAAEZ,QAAAA,EAAE,EAAEH,MAAM,CAACG,EAAb;AAAiBC,QAAAA,IAAI,EAAEJ,MAAM,CAACI,IAA9B;AAAoCW,QAAAA,IAAI,EAAEf,MAAM,CAACe;AAAjD,OAAP;;AACF;AACE,YAAM,IAAIH,KAAJ,EAAN;AANJ;AAQD,CATD;;AAWA,MAAMO,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,OAAO,GAAG7B,SAAS,EAAzB;AAEA,QAAM,CAAC8B,KAAD,EAAQC,aAAR,IAAyB1C,UAAU,CAACkB,WAAD,EAAc,EAAd,CAAzC;AACAyB,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,QAAM,CAACL,MAAD,EAASS,cAAT,IAA2B7C,UAAU,CAACiC,aAAD,EAAgB,YAAhB,CAA3C;AAEA,QAAM,CAACa,SAAD,EAAYC,iBAAZ,IAAiC/C,UAAU,CAACkC,gBAAD,EAAmB,CAClE;AAAEX,IAAAA,EAAE,EAAElB,IAAI,EAAV;AAAcmB,IAAAA,IAAI,EAAE,OAApB;AAA6BW,IAAAA,IAAI,EAAE;AAAnC,GADkE,CAAnB,CAAjD;AAGA,QAAM,CACJa,gBADI,EAEJC,wBAFI,IAGFjD,UAAU,CAACsC,uBAAD,EAA0B,EAAE,GAAGQ,SAAS,CAAC,CAAD;AAAd,GAA1B,CAHd;AAKA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CrD,QAAQ,CAAC,KAAD,CAAxD;;AAEA,QAAMsD,kBAAkB,GAAG,MAAM;AAC/BD,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEzC,KAAtB;AAAA,2BACA,QAAC,QAAD;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAE+B,OAAO,CAAC5B,IAAxB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAEoC,gBAAgB,CAACxB,IAD1B;AAEE,UAAA,YAAY,EAAE4B,kBAFhB;AAGE,UAAA,QAAQ,EAAEP;AAHZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,UAAD;AACE,UAAA,wBAAwB,EAAEI,wBAD5B;AAEE,UAAA,iBAAiB,EAAEF,iBAFrB;AAGE,UAAA,SAAS,EAAED,SAHb;AAIE,UAAA,UAAU,EAAEI,gBAJd;AAKE,UAAA,kBAAkB,EAAEE,kBALtB;AAME,UAAA,gBAAgB,EAAEJ;AANpB;AAAA;AAAA;AAAA;AAAA,gBANF,eAeE;AAAM,UAAA,SAAS,EAAER,OAAO,CAAC1B,OAAzB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAE0B,OAAO,CAACxB;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,QAAQ,EAAC,IAApB;AAAA,oCACE,QAAC,QAAD;AACE,cAAA,KAAK,EAAEyB,KADT;AAEE,cAAA,MAAM,EAAEL,MAFV;AAGE,cAAA,SAAS,EAAEU,SAHb;AAIE,cAAA,QAAQ,EAAEE,gBAJZ;AAKE,cAAA,QAAQ,EAAEN;AALZ;AAAA;AAAA;AAAA;AAAA,oBADF,EASGM,gBAAgB,CAACb,IAAjB,KAA0B,OAA1B,gBACC,QAAC,OAAD;AAAS,cAAA,QAAQ,EAAEO,aAAnB;AAAkC,cAAA,OAAO,EAAEM,gBAAgB,CAACzB;AAA5D;AAAA;AAAA;AAAA;AAAA,oBADD,GAGC,EAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CA9DD;;GAAMgB,G;UACY5B,S;;;KADZ4B,G;AAgEN,eAAeA,GAAf","sourcesContent":["import React, { useState, Fragment, useReducer } from \"react\";\n\nimport MenuDrawer from \"../MenuDrawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport uuid from \"uuid/v4\"\n\nimport AddTask from \"../AddTask\";\nimport TaskList from \"../../components/TaskList\";\nimport Header from \"../Header\";\n\nconst theme = createMuiTheme();\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  content: {\n    flexGrow: 1\n  },\n  toolbar: theme.mixins.toolbar\n}));\n\n\nconst taskReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\": {\n      const task = {\n        id: action.id,\n        name: action.name,\n        projectId: action.projectId,\n        labelId: action.labelId,\n        completed: false,\n        deleted: false\n      };\n      return [...state, task];\n    }\n    case \"DO_TODO\":\n      return state.map(task =>\n        task.id === action.id ? { ...task, completed: true } : task\n      );\n    case \"UNDO_TODO\":\n      return state.map(task =>\n        task.id === action.id ? { ...task, completed: false } : task\n      );\n    case \"DELETE_TODO\":\n      return state.map(task =>\n        task.id === action.id ? { ...task, deleted: true } : task\n      );\n    case \"ADD_LABEL\":\n      return state.map(task =>\n        task.id === action.id ? { ...task, labelId: action.labelId } : task\n      );\n    case \"UPDATE_TODO\":\n      return state.map((task) => {\n        if (task.id === action.payload.id) {\n          task.name = action.payload.updatedLabel;\n        }\n        return task;\n      });\n        \n    \n    default:\n      throw new Error();\n  }\n};\n\nconst filterReducer = (state, action) => {\n  switch (action.type) {\n    case \"SHOW_ALL\":\n      return \"ALL\";\n    case \"SHOW_INCOMPLETE\":\n      return \"INCOMPLETE\";\n    default:\n      throw new Error();\n  }\n};\n\n// Reducers creating items in the menu drawer\nconst menuItemsReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_LABEL\":\n      return [...state, { id: action.id, name: action.name, menu: \"LABEL\" }];\n    case \"ADD_PROJECT\":\n      return [...state, { id: action.id, name: action.name, menu: \"PROJECT\" }];\n    case \"DELETE\":\n      return state.filter(item => item.id !== action.id);\n    default:\n      throw new Error();\n  }\n};\n\n// Manage the project or label selected\nconst menuItemSelectedReducer = (state, action) => {\n  switch (action.type) {\n    case \"LABEL_SELECTED\":\n      return { id: action.id, name: action.name, menu: action.menu };\n    case \"PROJECT_SELECTED\":\n      return { id: action.id, name: action.name, menu: action.menu };\n    default:\n      throw new Error();\n  }\n};\n\nconst App = () => {\n  const classes = useStyles();\n\n  const [tasks, dispatchTasks] = useReducer(taskReducer, []);\n  console.log(tasks);\n  const [filter, dispatchFilter] = useReducer(filterReducer, \"INCOMPLETE\");\n \n  const [menuItems, dispatchMenuItems] = useReducer(menuItemsReducer, [\n    { id: uuid(), name: \"Inbox\", menu: \"PROJECT\" }\n  ]);\n  const [\n    menuItemSelected,\n    dispatchMenuItemSelected\n  ] = useReducer(menuItemSelectedReducer, { ...menuItems[0] });\n\n  const [drawerMobileOpen, setDrawerMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setDrawerMobileOpen(!drawerMobileOpen);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n    <Fragment>\n      <CssBaseline />\n      <div className={classes.root}>\n        <Header\n          title={menuItemSelected.name}\n          handleToggle={handleDrawerToggle}\n          dispatch={dispatchFilter}\n        />\n        <MenuDrawer\n          dispatchMenuItemSelected={dispatchMenuItemSelected}\n          dispatchMenuItems={dispatchMenuItems}\n          menuItems={menuItems}\n          mobileOpen={drawerMobileOpen}\n          handleDrawerToggle={handleDrawerToggle}\n          menuItemSelected={menuItemSelected}\n        />\n\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Container maxWidth=\"sm\">\n            <TaskList\n              tasks={tasks}\n              filter={filter}\n              menuItems={menuItems}\n              selected={menuItemSelected}\n              dispatch={dispatchTasks}\n            />\n            {}\n            {menuItemSelected.menu !== \"LABEL\" ? (\n              <AddTask dispatch={dispatchTasks} project={menuItemSelected.id} />\n            ) : (\n              \"\"\n            )}\n          </Container>\n        </main>\n      </div>\n    </Fragment>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}